{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "ws-synapse-rooz2"
		},
		"adls_for_deltalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adls_for_deltalake'"
		},
		"adls_for_deltalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlssynapserooz.dfs.core.windows.net/"
		},
		"lnk_disclose_offer_list_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.business.govt.nz/services/v2/companies-office/disclose-register/DisclosePublic"
		},
		"lnk_server_disclose_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.business.govt.nz/services/v2/companies-office/disclose-register/DisclosePublic"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/GetListOfDiscloseOffers')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy List of Offers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ','7074d707c32a48b57e9e5f9b5897072d')}",
										"type": "Expression"
									},
									"requestBody": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:get=\"http://data.business.govt.nz/services/FMCR/DisclosePublic/GetNewOrChangedOffersAndSchemes\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <get:GetNewOrChangedOffersAndSchemes>\n         <get:SchemaVersion>1.0</get:SchemaVersion>\n         <get:Request>\n            <get:StartDate>2022-06-19</get:StartDate>\n            <get:EndDate>2022-07-18</get:EndDate>\n            <get:EntityTypeList>\n               <get:EntityType>Offer</get:EntityType>\n               <get:EntityType>Scheme</get:EntityType>\n            </get:EntityTypeList>\n         </get:Request>\n      </get:GetNewOrChangedOffersAndSchemes>\n   </soapenv:Body>\n</soapenv:Envelope>",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_list_of_offers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_offer_list",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transform Offer List",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "Copy List of Offers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "GetDistinctValueOfOffers",
								"type": "NotebookReference"
							},
							"snapshot": true,
							"sparkPool": {
								"referenceName": "MySparkCluster",
								"type": "BigDataPoolReference"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_list_of_offers')]",
				"[concat(variables('workspaceId'), '/datasets/ds_offer_list')]",
				"[concat(variables('workspaceId'), '/notebooks/GetDistinctValueOfOffers')]",
				"[concat(variables('workspaceId'), '/bigDataPools/MySparkCluster')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IngestDiscloseData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_offer_list_for_lookup",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop through Offers",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy disclose offers",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "@{concat('Authorization: Bearer ','7074d707c32a48b57e9e5f9b5897072d')}",
													"type": "Expression"
												},
												"requestBody": {
													"value": "@{concat(\n'<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:get=\"http://data.business.govt.nz/services/FMCR/DisclosePublic/GetOfferPublic\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <get:GetOfferPublic>\n         <get:SchemaVersion>2.0</get:SchemaVersion>\n         <get:Request>\n            <get:OfferNumber>',item().offer_number,'</get:OfferNumber>\n         </get:Request>\n      </get:GetOfferPublic>\n   </soapenv:Body>\n</soapenv:Envelope>'\n\n\n\n)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_disclose",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_disclose_offers",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().offer_number",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_offer_list_for_lookup')]",
				"[concat(variables('workspaceId'), '/datasets/ds_disclose')]",
				"[concat(variables('workspaceId'), '/datasets/ds_disclose_offers')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrchestrateDiscloseIngestion')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GetListOfOffers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GetListOfDiscloseOffers",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Ingest",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetListOfOffers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "IngestDiscloseData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/GetListOfDiscloseOffers')]",
				"[concat(variables('workspaceId'), '/pipelines/IngestDiscloseData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_disclose')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_server_disclose",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lnk_server_disclose')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_disclose_offers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_for_deltalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "disclose_ingestion",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adls_for_deltalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_disclose_offers_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_for_deltalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "disclose_ingestion",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adls_for_deltalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_list_of_offers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_disclose_offer_list",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lnk_disclose_offer_list')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_offer_list')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_for_deltalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "disclose_list_of_offers",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adls_for_deltalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_offer_list_for_lookup')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_for_deltalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "offer_list",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "offer_number",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adls_for_deltalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adls_for_deltalake')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_for_deltalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adls_for_deltalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/lnk_disclose_offer_list')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('lnk_disclose_offer_list_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"SOAPAction": {
							"type": "SecureString",
							"value": "**********"
						},
						"Content-Type": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/lnk_server_disclose')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('lnk_server_disclose_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"SOAPAction": {
							"type": "SecureString",
							"value": "**********"
						},
						"Content-Type": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/1_explore_taxi_zone')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://dlssynapserooz.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = true\n    ) AS [result]\n\n\n\n-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@dlssynapserooz.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = true,\n        FIELDTERMINATOR =',',\n        ROWTERMINATOR ='\\n'\n    ) AS [result]\n\n\nEXEC sp_describe_first_result_set N'\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@dlssynapserooz.dfs.core.windows.net/raw/taxi_zone.csv'',\n        FORMAT = ''CSV'',\n        PARSER_VERSION = ''2.0'',\n        HEADER_ROW = true\n\n    ) AS [result]'\n\n\n-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@dlssynapserooz.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = true  ) \nWITH(\n\n     LocationID SMALLINT,\n     Borough varchar(15),\n     Zone VARCHAR (50),\n     service_zone VARCHAR(15)\n\n\n) AS [result]\n\n\nexec sp_describe_first_result_set N'SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@dlssynapserooz.dfs.core.windows.net/raw/taxi_zone.csv'',\n        FORMAT = ''CSV'',\n        PARSER_VERSION = ''2.0'',\n        HEADER_ROW = true  ) \nWITH(\n\n     LocationID SMALLINT,\n     Borough varchar(15),\n     Zone VARCHAR (50),\n     service_zone VARCHAR(15)\n\n\n) AS [result]'\n\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@dlssynapserooz.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = true  ) \nWITH(\n\n     LocationID SMALLINT,\n     Borough varchar(15) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n     Zone VARCHAR (50) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n     service_zone VARCHAR(15) COLLATE Latin1_General_100_CI_AI_SC_UTF8\n\n) AS [result]\n\n\n\n\n\n\n\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GetDistinctValueOfOffers')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "MySparkCluster",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "224g",
					"driverCores": 32,
					"executorMemory": "224g",
					"executorCores": 32,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "7dcaeff2-5a3d-4c24-be91-1acea509d97a"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/134b824c-eec7-4134-b15d-9b182fe58f20/resourceGroups/intergen-metadata-driven-framework-deploytest-dev/providers/Microsoft.Synapse/workspaces/ws-synapse-rooz2/bigDataPools/MySparkCluster",
						"name": "MySparkCluster",
						"type": "Spark",
						"endpoint": "https://ws-synapse-rooz2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/MySparkCluster",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 10,
						"cores": 32,
						"memory": 224
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://raw@dlssynapserooz.dfs.core.windows.net/disclose_list_of_offers/7feb971e-804f-4aa6-9c0e-7303e6f0e2e9.json', format='json')"
						],
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"from pyspark.sql.functions import explode, col\r\n",
							"offers = df.select(explode(\"SOAP-ENV:Envelope.SOAP-ENV:Body.get:GetNewOrChangedOffersAndSchemesResponse.get:Response.get:ChangeVersions.get:ChangeVersion\").alias(\"offers\")\r\n",
							"\r\n",
							",col(\"offers.get:OfferNumber\").alias(\"offer_number\")\r\n",
							",col(\"offers.get:FilingType\").alias(\"filing_type\")\r\n",
							",col(\"offers.get:EntityType\").alias(\"entity_type\")\r\n",
							",col(\"offers.get:VersionDate\").alias(\"version_date\")\r\n",
							",col(\"offers.get:VersionNumber\").alias(\"version_number\")\r\n",
							"\r\n",
							")\r\n",
							"\r\n",
							"\r\n",
							""
						],
						"outputs": [],
						"execution_count": 54
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"#create list of unique offers\r\n",
							"\r\n",
							"offer_list = offers.select('offer_number').distinct()\r\n",
							"\r\n",
							"\r\n",
							"(offer_list.coalesce(1).write.format(\"com.databricks.spark.csv\")\r\n",
							"    .option(\"header\", \"true\")\r\n",
							"    .mode(\"overwrite\")\r\n",
							"    .save(\"abfss://raw@dlssynapserooz.dfs.core.windows.net/offer_list\"))\r\n",
							""
						],
						"outputs": [],
						"execution_count": 61
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MySparkCluster')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 3,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "XLarge",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		}
	]
}